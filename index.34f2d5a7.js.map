{"mappings":"AGAO,MAAM,EACX,CAAA,CAAO,AAAC,AACR,EAAA,CAAW,AAAC,AACZ,EAAA,CAAe,AAAC,AAEhB,EAAA,CAAS,CAAG,KACV,IAAK,IAAM,KAAW,IAAI,CAAC,CAAA,CAAW,CACpC,EAAQ,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA,CAAe,CAEjD,CAAE,AAEF,aAAa,CAAA,OAAE,CAAM,CAAA,WAAE,CAAU,CAAA,eAAE,CAAc,CAAE,CAAE,CACnD,IAAI,CAAC,CAAA,CAAO,CAAG,SAAS,gBAAgB,CAAC,CAAC,CAAC,EAAE,EAAO,CAAC,CAAC,EACtD,IAAI,CAAC,CAAA,CAAW,CAAG,SAAS,gBAAgB,CAAC,CAAC,CAAC,EAAE,EAAW,CAAC,CAAC,EAC9D,IAAI,CAAC,CAAA,CAAe,CAAG,CACzB,CAEA,WAAY,CAAK,CAAE,CACjB,IAAK,IAAM,KAAW,IAAI,CAAC,CAAA,CAAO,CAChC,EAAQ,gBAAgB,CAAC,EAAO,IAAI,CAAC,CAAA,CAAS,CAElD,CAEA,cAAe,CAAK,CAAE,CACpB,IAAK,IAAM,KAAW,IAAI,CAAC,CAAA,CAAO,CAChC,EAAQ,mBAAmB,CAAC,EAAO,IAAI,CAAC,CAAA,CAAS,CAErD,CAEA,IAAI,YAAc,CAChB,OAAO,IAAI,CAAC,CAAA,CAAW,AACzB,CAEA,IAAI,QAAU,CACZ,OAAO,IAAI,CAAC,CAAA,CAAO,AACrB,CAEA,IAAI,gBAAkB,CACpB,OAAO,IAAI,CAAC,CAAA,CAAe,AAC7B,CAEA,IAAI,UAAY,CACd,OAAO,IAAI,CAAC,CAAA,CAAS,AACvB,CACF,CDrCA,AALa,IAAI,EAAQ,CACvB,OAAQ,oBACR,WAAY,qBACZ,eAAgB,SAClB,GACK,UAAU,CAAC,SAEhB,MAAM,EAAU,IAAI,EAAQ,CAC1B,OAAQ,uBACR,WAAY,wBACZ,eAAgB,SAClB,EACA,CAAA,EAAQ,cAAc,CAAG,WACvB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAS,AAAC,IACxC,EAAE,aAAa,GAAK,EAAE,MAAM,EAC9B,IAAI,CAAC,QAAQ,EAEjB,EACF,EACA,EAAQ,UAAU,CAAC,SACnB,EAAQ,cAAc","sources":["<anon>","src/index.js","src/parts/components/js/modals.js","src/js/canger_class.js"],"sourcesContent":["// TODO: js\nclass $061ec3686f6102a6$export$8cf1832d0a515216 {\n    #button;\n    #changeNode;\n    #classForChange;\n    #addClass = ()=>{\n        for (const element of this.#changeNode)element.classList.toggle(this.#classForChange);\n    };\n    constructor({ button: button, changeNode: changeNode, classForChange: classForChange }){\n        this.#button = document.querySelectorAll(`[${button}]`);\n        this.#changeNode = document.querySelectorAll(`[${changeNode}]`);\n        this.#classForChange = classForChange;\n    }\n    addLisener(event) {\n        for (const element of this.#button)element.addEventListener(event, this.#addClass);\n    }\n    removeLisener(event) {\n        for (const element of this.#button)element.removeEventListener(event, this.#addClass);\n    }\n    get changeNode() {\n        return this.#changeNode;\n    }\n    get button() {\n        return this.#button;\n    }\n    get classForChange() {\n        return this.#classForChange;\n    }\n    get addClass() {\n        return this.#addClass;\n    }\n}\n\n\nconst $b8b3d676064cc6bd$var$menu = new (0, $061ec3686f6102a6$export$8cf1832d0a515216)({\n    button: \"modal-menu-button\",\n    changeNode: \"modal-menu-overlay\",\n    classForChange: \"is-open\"\n});\n$b8b3d676064cc6bd$var$menu.addLisener(\"click\");\nconst $b8b3d676064cc6bd$var$contact = new (0, $061ec3686f6102a6$export$8cf1832d0a515216)({\n    button: \"modal-contact-button\",\n    changeNode: \"modal-contact-overlay\",\n    classForChange: \"is-open\"\n});\n$b8b3d676064cc6bd$var$contact.closeOnOverlay = function() {\n    this.changeNode[0].addEventListener(\"click\", (e)=>{\n        if (e.currentTarget === e.target) this.addClass();\n    });\n};\n$b8b3d676064cc6bd$var$contact.addLisener(\"click\");\n$b8b3d676064cc6bd$var$contact.closeOnOverlay();\n\n\n\n\n//# sourceMappingURL=index.34f2d5a7.js.map\n","// TODO: js\nimport './parts/components/js/modals';\n","import { Changer } from '../../../js/canger_class';\n\nconst menu = new Changer({\n  button: 'modal-menu-button',\n  changeNode: 'modal-menu-overlay',\n  classForChange: 'is-open'\n});\nmenu.addLisener('click');\n\nconst contact = new Changer({\n  button: 'modal-contact-button',\n  changeNode: 'modal-contact-overlay',\n  classForChange: 'is-open'\n});\ncontact.closeOnOverlay = function () {\n  this.changeNode[0].addEventListener('click', (e) => {\n    if (e.currentTarget === e.target) {\n      this.addClass();\n    }\n  });\n};\ncontact.addLisener('click');\ncontact.closeOnOverlay();\n","export class Changer {\n  #button;\n  #changeNode;\n  #classForChange;\n\n  #addClass = () => {\n    for (const element of this.#changeNode) {\n      element.classList.toggle(this.#classForChange);\n    }\n  };\n\n  constructor ({ button, changeNode, classForChange }) {\n    this.#button = document.querySelectorAll(`[${button}]`);\n    this.#changeNode = document.querySelectorAll(`[${changeNode}]`);\n    this.#classForChange = classForChange;\n  }\n\n  addLisener (event) {\n    for (const element of this.#button) {\n      element.addEventListener(event, this.#addClass);\n    }\n  }\n\n  removeLisener (event) {\n    for (const element of this.#button) {\n      element.removeEventListener(event, this.#addClass);\n    }\n  }\n\n  get changeNode () {\n    return this.#changeNode;\n  }\n\n  get button () {\n    return this.#button;\n  }\n\n  get classForChange () {\n    return this.#classForChange;\n  }\n\n  get addClass () {\n    return this.#addClass;\n  }\n}\n"],"names":["$061ec3686f6102a6$export$8cf1832d0a515216","element","classList","toggle","constructor","button","changeNode","classForChange","document","querySelectorAll","addLisener","event","addEventListener","removeLisener","removeEventListener","addClass","$b8b3d676064cc6bd$var$menu","$b8b3d676064cc6bd$var$contact","closeOnOverlay","e","currentTarget","target"],"version":3,"file":"index.34f2d5a7.js.map"}